version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: vexmail
      POSTGRES_USER: vexmail_user
      POSTGRES_PASSWORD: vexmail_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vexmail_user -d vexmail"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache and Message Broker
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for Object Storage (S3-compatible)
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # VexMail Web Application
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      # Database
      DATABASE_URL: postgresql://vexmail_user:vexmail_password@postgres:5432/vexmail
      
      # Redis
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      
      # Storage (MinIO)
      STORAGE_PROVIDER: minio
      STORAGE_ENDPOINT_URL: http://minio:9000
      STORAGE_ACCESS_KEY: minioadmin
      STORAGE_SECRET_KEY: minioadmin123
      STORAGE_BUCKET: vexmail-attachments
      
      # IMAP Configuration (set these in .env file)
      IMAP_SERVER: ${IMAP_SERVER}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      IMAP_MAILBOX: ${IMAP_MAILBOX:-INBOX}
      
      # Security
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      
      # Flask
      FLASK_ENV: ${FLASK_ENV:-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Celery Worker for Background Tasks
  worker:
    build: .
    command: celery -A celery_config worker --loglevel=info --concurrency=2
    environment:
      # Same environment as web service
      DATABASE_URL: postgresql://vexmail_user:vexmail_password@postgres:5432/vexmail
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      STORAGE_PROVIDER: minio
      STORAGE_ENDPOINT_URL: http://minio:9000
      STORAGE_ACCESS_KEY: minioadmin
      STORAGE_SECRET_KEY: minioadmin123
      STORAGE_BUCKET: vexmail-attachments
      IMAP_SERVER: ${IMAP_SERVER}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      IMAP_MAILBOX: ${IMAP_MAILBOX:-INBOX}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      FLASK_ENV: ${FLASK_ENV:-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Celery Beat for Scheduled Tasks
  beat:
    build: .
    command: celery -A celery_config beat --loglevel=info
    environment:
      # Same environment as web service
      DATABASE_URL: postgresql://vexmail_user:vexmail_password@postgres:5432/vexmail
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      STORAGE_PROVIDER: minio
      STORAGE_ENDPOINT_URL: http://minio:9000
      STORAGE_ACCESS_KEY: minioadmin
      STORAGE_SECRET_KEY: minioadmin123
      STORAGE_BUCKET: vexmail-attachments
      IMAP_SERVER: ${IMAP_SERVER}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      IMAP_MAILBOX: ${IMAP_MAILBOX:-INBOX}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      FLASK_ENV: ${FLASK_ENV:-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Flower for Celery Monitoring (Optional)
  flower:
    build: .
    command: celery -A celery_config flower --port=5555
    ports:
      - "5555:5555"
    environment:
      DATABASE_URL: postgresql://vexmail_user:vexmail_password@postgres:5432/vexmail
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - redis
      - worker
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  default:
    name: vexmail_network
